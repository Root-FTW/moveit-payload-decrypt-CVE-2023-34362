#!/bin/bash
#MOVEit Payload IV and Key reconstructor given Org Key
 
# Example Usage
 
# First argument is the file containing the payload found in the INSERT/UPDATE sql statement from MOVEit Logs
# this payload should start with @%! followed by the base64.
# Second argument is the Org Key 0 which is found in the affected instance at the registry key Microsoft/Standard Networks/siLock/Institutions/0
# $./moveit_payload_decrypt.sh payload.txt AABBCCDDEEFF1122CCDDEEAA11223344
# Enjoy!
 
 
#Eduardo Duarte
#toorandom@gmail.com
 
if [ "$2" == "" ]
then
  echo "in arg1 you should tell me the base64 filename containing the full payload found in the ISAPI logs, the full payload starts with @%!<..base64..>"
  echo "in arg2 the 16 byte org0 key in hex without spaces which is in the MOVEit server in the registry Microsoft/Standard Networks/siLock/Institutions/0"
  exit 1
fi
 
payload="$1"
org0_key="$2"
static_part_key="4083E8338667E61E3056FD9D"
 
cat $payload | cut -c 4-1000000 | base64 -d > $payload.tmp
 
dd if=$payload.tmp of=$payload.header bs=1 count=12
dd if=$payload.tmp of=$payload.ciphertext bs=1 skip=12
 
 
data_sha1=$(xxd -s 2 -l 2  $payload.header  |sed 's/ //g' | cut -d ":" -f 2 | tr '[:lower:]' '[:upper:]' | cut -c 1-4)
org0_key_sha1=$(xxd -s 4 -l 4  $payload.header | sed 's/ //g'  | cut -d ":" -f 2 | tr '[:lower:]' '[:upper:]' | cut -c 1-8)
iv=$(xxd -s 8 -l 4  $payload.header | sed 's/ //g' | cut -d ":" -f 2 | tr '[:lower:]' '[:upper:]' | cut -c 1-8 )
iv=$iv$iv$iv$iv
 
masterkey=$static_part_key$org0_key"00000000"
 
echo MasterKey built: $masterkey
echo Initialization vector: $iv
 
printf "\n"
echo "### BEGIN DECRYPTED ###"
printf "\n"
 
openssl aes-256-cbc -d -in $payload.ciphertext -out $payload.decrypted -iv $iv -K $masterkey 2>/dev/null
printf "\n### BEGIN RAW DECRYPT YSOSERIAL OBJECT ###\n"
cat $payload.decrypted
printf "\n### END RAW DECRYPT YSOSERIAL OBJECT ###\n\n"
 
printf "\n### BEGIN YSOSERIAL DECODE ###\n"
cat $payload.decrypted|base64 -d|strings
printf "### END YSOSERIAL DECODE ###\n"
printf "\n\n"
echo "### END DECRYPTED ###"
 
